package wired:input;

world host {
  import handler;
}

interface handler {
  use types.{input-event};
  use wired:scene/node.{node};

  // Input handler.
  // Represents an object in 3D space that can react to input.
  // Handlers can optionally capture the input method, stopping propagation to other handlers.
  resource spatial-handler {
    constructor(node: borrow<node>);

    // Handle the next recieved input event.
    // Events only last for one tick.
    handle-input: func() -> option<input-event>;
  }
}

// Input method.
// Represents a single point of interaction (3D pointer, hand, finger tip).
interface method {}
